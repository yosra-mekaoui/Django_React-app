# Generated by Django 4.1.10 on 2023-07-21 11:21

from django.db import migrations, models
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(choices=[('administrateur', 'Administrateur'), ('coordinateur_unité_pédagogique', 'Coordinateur unité pédagogique'), ('enseignant', 'Enseignant'), ('coordinateur_des_projets', 'Coordinateur des projets'), ('responsable_option', 'Responsable option'), ('responsable_module', 'Responsable module')], max_length=50)),
                ('description', models.TextField()),
                ('charge_horaire', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(default=None, max_length=254, null=True, unique=True, validators=[users.models.is_mail_esprit])),
                ('username', models.CharField(default='username_Default', max_length=50, unique=True)),
                ('nom', models.CharField(max_length=120)),
                ('prenom', models.CharField(max_length=120)),
                ('grade', models.CharField(max_length=120)),
                ('est_enseignant', models.BooleanField(default=False)),
                ('password', models.CharField(default='', max_length=128)),
                ('is_staff', models.BooleanField(default=True, help_text='Designates whether the user can log into the admin site.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('roles', models.ManyToManyField(related_name='enseignants', to='users.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
